separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
mutate(island = factor(island, levels = c("obj", "island"))) %>%
select(-token)
#write_csv(df_gender, "./df_gender.csv")
df_gender %>%
filter(! test %in% c("gender_cnp_wh", "gender_cnp")) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(model = factor(model, levels = c("GPT2", "GPT3", "GRNN", "JRNN", "NGRAM"))) %>%
group_by(test) %>%
do({ plot_gender(.) }) %>%
ungroup()
stats_test = function(df) {
df %>%
summarise(
e = summary(lmer(surprisal~lisc*pron*island+(1|item), data = df))$coefficients[8],
p = summary(lmer(surprisal~lisc*pron*island+(1|item), data = df))$coefficients[40])
}
df_gender %>%
group_by(model, test) %>%
do({stats_test(.)}) %>%
arrange(test) %>%
ungroup()
stats_test = function(df) {
df %>%
summarise(
e = summary(lmer(surprisal~lisc*pron*island+(1|item), data = df))$coefficients[8],
p = summary(lmer(surprisal~lisc*pron*island+(1|item), data = df))$coefficients[40])
}
df_gender %>%
filter(! (model == "GPT3" & test == "gender_coord_conj1")) %>%
filter(! (model == "GPT3" & test == "gender_cnp_whp")) %>%
group_by(model, test) %>%
do({stats_test(.)}) %>%
arrange(test) %>%
ungroup()
library(tidyverse)
library(brms)
library(lme4)
library(lmerTest)
library(plotrix)
library(stringr)
library(readxl)
library(VGAM)
library(jsonlite)
library(viridis)
library(broom)
library(Cairo)
df = read.csv("../data/combined_results.csv") %>%
rename("sent_idx" = "sent_index.y") %>%
select(-word_idx)
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% filter(token != ".") %>% select(-token)
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal")
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) filter(token != ".") %>% select(-token)
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>% select(-token)
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>% select(-token)
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^ "), T, F))
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>% select(-token) %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^ "), T, F))
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^ "), T, F))
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^ "), T, F)) %>%
mutate(
b1_tok = lead(token),
b1_surp = lead(GPT3),
b1_medial = lead(medial),
b2_tok = lead(b1_tok),
b2_surp = lead(b1_surp),
b2_medial = lead(b1_medial),
b2_medial = (b1_medial & b2_medial)
#Two-back is the furthest it goes
) %>%
mutate(
GPT2 = if_else(b1_medial == T, GPT3 + b1_surp, GPT3),
GPT = if_else(b1_medial == T & b2_medial == T, GPT3 + b1_surp + b2_surp, GPT3)
) %>%
filter(medial == F) %>%
select(GPT3)
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^ "), T, F))
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^ "), T, F)) %>%
filter(medial)
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != ".") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^Ġ"), T, F)) %>%
filter(medial)
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, GPT3)) %>% filter(token != "Ġ.")
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, -1 * GPT3)) %>% filter(token != "Ġ.") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^Ġ"), T, F)) %>%
filter(medial)
GPT3
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, -1 * GPT3)) %>% filter(token != "Ġ.") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^Ġ"), T, F)) %>%
filter(medial)
mutate(
b1_tok = lead(token),
b1_surp = lead(GPT3),
b1_medial = lead(medial),
b2_tok = lead(b1_tok),
b2_surp = lead(b1_surp),
b2_medial = lead(b1_medial),
b2_medial = (b1_medial & b2_medial)
#Two-back is the furthest it goes
) %>%
mutate(
GPT2 = if_else(b1_medial == T, GPT3 + b1_surp, GPT3),
GPT = if_else(b1_medial == T & b2_medial == T, GPT3 + b1_surp + b2_surp, GPT3)
) %>%
filter(medial == F) %>%
select(GPT3)
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, -1 * GPT3)) %>% filter(token != "Ġ.") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^Ġ"), T, F)) %>%
mutate(
b1_tok = lead(token),
b1_surp = lead(GPT3),
b1_medial = lead(medial),
b2_tok = lead(b1_tok),
b2_surp = lead(b1_surp),
b2_medial = lead(b1_medial),
b2_medial = (b1_medial & b2_medial)
#Two-back is the furthest it goes
) %>%
mutate(
GPT2 = if_else(b1_medial == T, GPT3 + b1_surp, GPT3),
GPT = if_else(b1_medial == T & b2_medial == T, GPT3 + b1_surp + b2_surp, GPT3)
) %>%
filter(medial == F) %>%
select(GPT3)
GPT3
GRNN = read.csv("../data/gender_suppl_tests/results/GRNN.txt", sep="\t") %>% rename("GRNN" = "surprisal") %>% filter(token != "<eos>", token != ".") %>% select(-token)
GPT2 = read.csv("../data/gender_suppl_tests/results/GPT2.txt", sep="\t") %>% rename("GPT2" = "surprisal") %>% filter(! token %in% c("Ġ<", "Ġ<e", "Ġos", "Ġ>", "Ġ.", "<", "e", "os", ">", ".")) %>%
mutate(medial = if_else(GPT2 > 0 & !str_detect(token, "^Ġ"), T, F))%>%
mutate(
b1_tok = lead(token),
b1_surp = lead(GPT2),
b1_medial = lead(medial),
b2_tok = lead(b1_tok),
b2_surp = lead(b1_surp),
b2_medial = lead(b1_medial),
b2_medial = (b1_medial & b2_medial)
#Two-back is the furthest it goes
) %>%
mutate(
GPT2 = if_else(b1_medial == T, GPT2 + b1_surp, GPT2),
GPT = if_else(b1_medial == T & b2_medial == T, GPT2 + b1_surp + b2_surp, GPT2)
) %>%
filter(medial == F) %>%
select(GPT2)
GPT3 = read.csv("../data/gender_suppl_tests/results/GPT3.txt", sep="\t") %>% rename("GPT3" = "surprisal") %>% mutate(GPT3 = if_else(is.na(GPT3), 0, -1 * GPT3)) %>% filter(token != "Ġ.") %>%
mutate(medial = if_else(GPT3 > 0 & !str_detect(token, "^Ġ"), T, F)) %>%
mutate(
b1_tok = lead(token),
b1_surp = lead(GPT3),
b1_medial = lead(medial),
b2_tok = lead(b1_tok),
b2_surp = lead(b1_surp),
b2_medial = lead(b1_medial),
b2_medial = (b1_medial & b2_medial)
#Two-back is the furthest it goes
) %>%
mutate(
GPT2 = if_else(b1_medial == T, GPT3 + b1_surp, GPT3),
GPT = if_else(b1_medial == T & b2_medial == T, GPT3 + b1_surp + b2_surp, GPT3)
) %>%
filter(medial == F) %>%
select(GPT3)
JRNN = read.csv("../data/gender_suppl_tests/results/JRNN.txt", sep="\t") %>% rename("JRNN" = "surprisal") %>% filter(token != "<eos>", token != ".") %>% select(-token)
NGRAM = read.csv("../data/gender_suppl_tests/results/NGRAm.txt", sep="\t") %>% rename("NGRAM" = "surprisal") %>% filter(token != ".") %>% select(-token)
REF = read.csv("../data/gender_suppl_tests/test_items.csv", col.names = c("test", "item", "condition", "region", "token")) %>% filter(token != ".")
suppl_control_df = cbind(REF, GRNN, GPT2, GPT3, JRNN, NGRAM) %>%
rename("sent_idx" = "token_id") %>%
select(-sentence_id)
df = rbind(df, suppl_control_df)
df = df[c("test", "condition", "region", "token", "item", "sent_idx", "NGRAM", "GRNN", "JRNN", "GPT2", "GPT3")]
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_coord_conj1" & island == "island", "conj1", island),
island = if_else(test == "gender_coord" & island == "island", "conj2", island)) %>%
filter(! (test == "gender_coord_conj1" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "conj1", "conj2"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_coord.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_cnp" | test == "gender_cnp_wh") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_cnp" & island == "island", "that-cnp", island),
island = if_else(test == "gender_cnp_wh" & island == "island", "wh-cnp", island)) %>%
filter(! (test == "gender_cnp_wh" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "that-cnp", "wh-cnp"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_cnp.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup()
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup()
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_coord_conj1" & island == "island", "conj1", island),
island = if_else(test == "gender_coord" & island == "island", "conj2", island)) %>%
filter(! (test == "gender_coord_conj1" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "conj1", "conj2"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_coord.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_coord_conj1" & island == "island", "conj1", island),
island = if_else(test == "gender_coord" & island == "island", "conj2", island)) %>%
filter(! (test == "gender_coord_conj1" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "conj1", "conj2"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_coord.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
#drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_coord_conj1" & island == "island", "conj1", island),
island = if_else(test == "gender_coord" & island == "island", "conj2", island)) %>%
filter(! (test == "gender_coord_conj1" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "conj1", "conj2"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_coord.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp - item_mean),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_coord_conj1" & island == "island", "conj1", island),
island = if_else(test == "gender_coord" & island == "island", "conj2", island)) %>%
filter(! (test == "gender_coord_conj1" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "conj1", "conj2"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_coord.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(island = if_else(test == "gender_coord_conj1" & island == "island", "conj1", island),
island = if_else(test == "gender_coord" & island == "island", "conj2", island)) %>%
filter(! (test == "gender_coord_conj1" & island == "obj")) %>%
mutate(island = factor(island, levels = c("obj", "conj1", "conj2"))) %>%
ggplot(aes(x=island, y=m, ymin=lower, ymax=upper, fill=lisc)) +
geom_hline(yintercept=0, color="grey") +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_grid(~model) +
theme_bw() +
scale_fill_manual(labels = c("fem.", "masc."), values = c("#7cae00", "#c77cff")) +
#scale_x_discrete(labels= c("control", "conj1")) +
ylab("Masc Expectation") +
ggtitle("Gender Control") +
theme(legend.position="right",
axis.text.x=element_text(size=12, angle = 30, hjust=1),
axis.title.x=element_blank(),
legend.title=element_blank())
ggsave(filename="./images/gender_coord.pdf",height=2.8,width=10, device = cairo_pdf)
df %>%
filter(test == "gender_coord" | test == "gender_coord_conj1") %>%
separate(condition, sep="_", into=c("lisc", "pron", "island")) %>%
gather(model, surprisal, 9:13) %>%
filter(region == "pronoun") %>%
select(-token) %>%
spread(pron, surprisal) %>%
mutate(gend_exp = fem-male) %>%
select(-fem, -male) %>%
group_by(model, item, test) %>%
mutate(item_mean=mean(gend_exp)) %>%
ungroup() %>%
drop_na() %>%
group_by(model, test, island, lisc) %>%
summarise(m=mean(gend_exp),
s=std.error(gend_exp),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup()
